#s3/cloudfront/route 53
#add ec2 instance
#Setup your S3 Bucket
resource "aws_s3_bucket" "cdn_bucket" {
  bucket = "team3-bucket"
  acl = "public-read"
  policy = <<POLICY
{
  "Version":"2012-10-17",
  "Statement":[{
    "Sid":"PublicReadForGetBucketObjects",
      "Effect":"Allow",
      "Principal": "*",
      "Action":"s3:GetObject",
      "Resource":["arn:aws:s3:::team3-bucket/*"
      ]
    }
  ]
}
POLICY
}
#Setup the CloudFront Distribution
resource "aws_cloudfront_distribution" "cloudfront_distribution" {
  origin {
    domain_name = "group3_s3_utility_bucket.s3.amazonaws.com"
    origin_id = "group3_s3_utility_bucket"
  }
  enabled = true
  price_class = "PriceClass_All"
  default_cache_behavior {
    allowed_methods = [ "DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT" ]
    cached_methods = [ "GET", "HEAD" ]
    target_origin_id = "S3-team3-bucket"
    forwarded_values {
      query_string = true
      cookies {
        forward = "none"
      }
    }
    viewer_protocol_policy = "allow-all"
    min_ttl = 0
    default_ttl = 3600
    max_ttl = 86400
  }
  retain_on_delete = false
  viewer_certificate {
    cloudfront_default_certificate = true
  }
  restrictions {
    geo_restriction {
      restriction_type = "none"
    }
  }
}
#Add Root Route53 Records
resource "aws_route53_record" "main_record" {
  zone_id = "J2O3JDPDL4MWNA"  #domain zone_id
  name = "t3project-cdn.team3project.com"
  type = "A"
  alias {
    name = "team3-bucket.s3.amazonaws.com"
    zone_id = "H3SSLWDDSFEOW3"  #cloudfront zone_id
    evaluate_target_health = false
  }
}